Bright Data
Bright Data

@luminati-io/brightdata-mcp
Homepage
GitHub
Try in Playground

Overview

Tools
One MCP for the Web. Easily search, crawl, navigate, and extract websites without getting blocked. Ideal for discovering and retrieving structured insights from any public source - effortlessly and ethically.

Tools
search_engine
Scrape search results from Google, Bing or Yandex. Returns SERP results in markdown (URL, title, description)

scrape_as_markdown
Scrape a single webpage URL with advanced options for content extraction and get back the results in MarkDown language. This tool can unlock any webpage even if it uses bot detection or CAPTCHA.

scrape_as_html
Scrape a single webpage URL with advanced options for content extraction and get back the results in HTML. This tool can unlock any webpage even if it uses bot detection or CAPTCHA.

extract
Scrape a webpage and extract structured data as JSON. First scrapes the page as markdown, then uses AI sampling to convert it to structured JSON format. This tool can unlock any webpage even if it uses bot detection or CAPTCHA.

View 56 more tools
Connect
HTTP
server.smithery.ai/@luminati-io/brightdata-mcp
Generate URL
Auto
JSON
TypeScript
Python
Configuration in JSON format:

Mac/Linux
Windows
WSL
JSON for Mac/Linux

Copy

brightdata-mcp
{
  "mcpServers": {
    "brightdata-mcp": {
      "command": "npx",
      "args": [
        "-y",
        "@smithery/cli@latest",
        "run",
        "@luminati-io/brightdata-mcp",
        "--key",
        "0ce87743-dd43-4c21-9578-96728550b6f2"
      ]
    }
  }
}
Your smithery key is sensitive. Please don't share it with anyone.
Details
Security
not scanned

Monthly Tool Calls
3,620
Deployed from
main
ea4d4c7
Success Rate
97.24%
License
MIT
Local
No
Published
4/16/2025
Source Code
brightdata/brightdata-mcp
Homepage
https://brightdata.com
Report an Issue

Bright Data
Bright Data

@luminati-io/brightdata-mcp
Homepage
GitHub
Try in Playground

Overview

Tools

search_engine
Scrape search results from Google, Bing or Yandex. Returns SERP results in markdown (URL, title, description)

Run

scrape_as_markdown
Scrape a single webpage URL with advanced options for content extraction and get back the results in MarkDown language. This tool can unlock any webpage even if it uses bot detection or CAPTCHA.

Run

scrape_as_html
Scrape a single webpage URL with advanced options for content extraction and get back the results in HTML. This tool can unlock any webpage even if it uses bot detection or CAPTCHA.

Run

extract
Scrape a webpage and extract structured data as JSON. First scrapes the page as markdown, then uses AI sampling to convert it to structured JSON format. This tool can unlock any webpage even if it uses bot detection or CAPTCHA.

Run

session_stats
Tell the user about the tool usage during this session

Run

web_data_amazon_product
Quickly read structured amazon product data.
Requires a valid product URL with /dp/ in it.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_amazon_product_reviews
Quickly read structured amazon product review data.
Requires a valid product URL with /dp/ in it.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_amazon_product_search
Quickly read structured amazon product search data.
Requires a valid search keyword and amazon domain URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_walmart_product
Quickly read structured walmart product data.
Requires a valid product URL with /ip/ in it.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_walmart_seller
Quickly read structured walmart seller data.
Requires a valid walmart seller URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_ebay_product
Quickly read structured ebay product data.
Requires a valid ebay product URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_homedepot_products
Quickly read structured homedepot product data.
Requires a valid homedepot product URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_zara_products
Quickly read structured zara product data.
Requires a valid zara product URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_etsy_products
Quickly read structured etsy product data.
Requires a valid etsy product URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_bestbuy_products
Quickly read structured bestbuy product data.
Requires a valid bestbuy product URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_linkedin_person_profile
Quickly read structured linkedin people profile data.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_linkedin_company_profile
Quickly read structured linkedin company profile data
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_linkedin_job_listings
Quickly read structured linkedin job listings data
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_linkedin_posts
Quickly read structured linkedin posts data
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_linkedin_people_search
Quickly read structured linkedin people search data
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_crunchbase_company
Quickly read structured crunchbase company data
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_zoominfo_company_profile
Quickly read structured ZoomInfo company profile data.
Requires a valid ZoomInfo company URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_instagram_profiles
Quickly read structured Instagram profile data.
Requires a valid Instagram URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_instagram_posts
Quickly read structured Instagram post data.
Requires a valid Instagram URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_instagram_reels
Quickly read structured Instagram reel data.
Requires a valid Instagram URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_instagram_comments
Quickly read structured Instagram comments data.
Requires a valid Instagram URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_facebook_posts
Quickly read structured Facebook post data.
Requires a valid Facebook post URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_facebook_marketplace_listings
Quickly read structured Facebook marketplace listing data.
Requires a valid Facebook marketplace listing URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_facebook_company_reviews
Quickly read structured Facebook company reviews data.
Requires a valid Facebook company URL and number of reviews.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_facebook_events
Quickly read structured Facebook events data.
Requires a valid Facebook event URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_tiktok_profiles
Quickly read structured Tiktok profiles data.
Requires a valid Tiktok profile URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_tiktok_posts
Quickly read structured Tiktok post data.
Requires a valid Tiktok post URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_tiktok_shop
Quickly read structured Tiktok shop data.
Requires a valid Tiktok shop product URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_tiktok_comments
Quickly read structured Tiktok comments data.
Requires a valid Tiktok video URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_google_maps_reviews
Quickly read structured Google maps reviews data.
Requires a valid Google maps URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_google_shopping
Quickly read structured Google shopping data.
Requires a valid Google shopping product URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_google_play_store
Quickly read structured Google play store data.
Requires a valid Google play store app URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_apple_app_store
Quickly read structured apple app store data.
Requires a valid apple app store app URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_reuter_news
Quickly read structured reuter news data.
Requires a valid reuter news report URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_github_repository_file
Quickly read structured github repository data.
Requires a valid github repository file URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_yahoo_finance_business
Quickly read structured yahoo finance business data.
Requires a valid yahoo finance business URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_x_posts
Quickly read structured X post data.
Requires a valid X post URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_zillow_properties_listing
Quickly read structured zillow properties listing data.
Requires a valid zillow properties listing URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_booking_hotel_listings
Quickly read structured booking hotel listings data.
Requires a valid booking hotel listing URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_youtube_profiles
Quickly read structured youtube profiles data.
Requires a valid youtube profile URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_youtube_comments
Quickly read structured youtube comments data.
Requires a valid youtube video URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_reddit_posts
Quickly read structured reddit posts data.
Requires a valid reddit post URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

web_data_youtube_videos
Quickly read structured YouTube videos data.
Requires a valid YouTube video URL.
This can be a cache lookup, so it can be more reliable than scraping

Run

scraping_browser_navigate
Navigate a scraping browser session to a new URL

Run

scraping_browser_go_back
Go back to the previous page

Run

scraping_browser_go_forward
Go forward to the next page

Run

scraping_browser_links
Get all links on the current page, text and selectors
It's strongly recommended that you call the links tool to check that your click target is valid

Run

scraping_browser_click
Click on an element.
Avoid calling this unless you know the element selector (you can use other tools to find those)

Run

scraping_browser_type
Type text into an element

Run

scraping_browser_wait_for
Wait for an element to be visible on the page

Run

scraping_browser_screenshot
Take a screenshot of the current page

Run

scraping_browser_get_text
Get the text content of the current page

Run

scraping_browser_get_html
Get the HTML content of the current page. Avoid using the full_page option unless it is important to see things like script tags since this can be large

Run

scraping_browser_scroll
Scroll to the bottom of the current page

Run

scraping_browser_scroll_to
Scroll to a specific element on the page

Run
Select Profile

Personal
Default

No required fields.


Optional Settings
Con